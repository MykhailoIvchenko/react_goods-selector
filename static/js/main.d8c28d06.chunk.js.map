{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","makeGoodSelection","good","find","currentGood","changeButtonType","toggleButtonName","showSelectedGoods","goods","length","handleSelectButtonClick","setState","prevState","filter","changeClearButtonState","className","map","type","onClick","this","slice","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,kBAAoB,SAACC,GAAD,OAClB,EAAKH,MAAMC,cAAcG,MAAK,SAAAC,GAAW,OAAIA,IAAgBF,KACzD,oBAAsB,Y,EAG5BG,iBAAmB,SAACH,GAAD,OACjB,EAAKH,MAAMC,cAAcG,MAAK,SAAAC,GAAW,OAAIA,IAAgBF,KACzD,SAAW,O,EAGjBI,iBAAmB,SAACJ,GAAD,OAAmB,EAAKH,MAAMC,cAC9CG,MAAK,SAAAC,GAAW,OAAIA,IAAgBF,KAAQ,SAAW,O,EAG1DK,kBAAoB,SAACC,GACnB,OAAqB,IAAjBA,EAAMC,OACD,oBAGY,IAAjBD,EAAMC,OACD,eAGF,iB,EAGTC,wBAA0B,SAACR,GACrB,EAAKH,MAAMC,cACZG,MAAK,SAAAC,GAAW,OAAIA,IAAgBF,KACrC,EAAKS,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,cACAY,EAAUZ,cACPa,QAAO,SAAAT,GAAW,OAAIA,IAAgBF,SAG3C,EAAKS,UAAS,SAACC,GAAD,MAAgB,CAC5BZ,cAAc,GAAD,mBAAMY,EAAUZ,eAAhB,CACXE,S,EAKRY,uBAAyB,kBAA2C,IAApC,EAAKf,MAAMC,cAAcS,OACrD,SAAW,mB,4CAEf,WAAU,IAAD,OACP,OACE,sBAAKM,UAAU,MAAf,UACGlB,EAAgBmB,KAAI,SAAAd,GAAI,OACvB,mCACE,sBACEa,UAAU,gBADZ,UAIE,qBACEA,UAAW,EAAKd,kBAAkBC,GADpC,SAGGA,IAEH,wBACEe,KAAK,SACLF,UAAW,EAAKV,iBAAiBH,GACjCgB,QAAS,kBAAM,EAAKR,wBAAwBR,IAH9C,SAKG,EAAKI,iBAAiBJ,OAZpBA,QAiBX,sBAAKa,UAAU,kBAAf,UACE,+BACGI,KAAKpB,MAAMC,cAAcoB,MAAM,GAAI,GAAGC,KAAK,MAC3CF,KAAKpB,MAAMC,cAAcS,OAAS,GAAK,QACvCU,KAAKpB,MAAMC,cAAcmB,KAAKpB,MAAMC,cAAcS,OAAS,GAC3DU,KAAKZ,kBAAkBY,KAAKpB,MAAMC,kBAErC,wBACEiB,KAAK,SACLF,UAAWI,KAAKL,yBAChBI,QAAS,WACP,EAAKP,SAAS,CACZX,cAAe,MALrB,kBAYDH,EAAgBY,c,GA7FPa,IAAMC,WAmGTzB,IClHf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8c28d06.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, { selectedGoods: string[] }> {\n  state = {\n    selectedGoods: [],\n  };\n\n  makeGoodSelection = (good: string) => (\n    this.state.selectedGoods.find(currentGood => currentGood === good)\n      ? 'goodName selected' : 'goodName'\n  );\n\n  changeButtonType = (good: string) => (\n    this.state.selectedGoods.find(currentGood => currentGood === good)\n      ? 'remove' : 'add'\n  );\n\n  toggleButtonName = (good: string) => (this.state.selectedGoods\n    .find(currentGood => currentGood === good) ? 'Remove' : 'Add'\n  );\n\n  showSelectedGoods = (goods: string[]) => {\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return ' is selected';\n    }\n\n    return ' are selected';\n  };\n\n  handleSelectButtonClick = (good: string) => {\n    if (this.state.selectedGoods\n      .find(currentGood => currentGood === good)) {\n      this.setState((prevState) => ({\n        selectedGoods:\n        prevState.selectedGoods\n          .filter(currentGood => currentGood !== good),\n      }));\n    } else {\n      this.setState((prevState) => ({\n        selectedGoods: [...prevState.selectedGoods,\n          good],\n      }));\n    }\n  };\n\n  changeClearButtonState = () => (this.state.selectedGoods.length === 0\n    ? 'hidden' : 'deleteSelection');\n\n  render() {\n    return (\n      <div className=\"App\">\n        {goodsFromServer.map(good => (\n          <>\n            <div\n              className=\"goodContainer\"\n              key={good}\n            >\n              <div\n                className={this.makeGoodSelection(good)}\n              >\n                {good}\n              </div>\n              <button\n                type=\"button\"\n                className={this.changeButtonType(good)}\n                onClick={() => this.handleSelectButtonClick(good)}\n              >\n                {this.toggleButtonName(good)}\n              </button>\n            </div>\n          </>\n        ))}\n        <div className=\"headerContainer\">\n          <h1>\n            {this.state.selectedGoods.slice(0, -1).join(', ')}\n            {this.state.selectedGoods.length > 1 && ' and '}\n            {this.state.selectedGoods[this.state.selectedGoods.length - 1]}\n            {this.showSelectedGoods(this.state.selectedGoods)}\n          </h1>\n          <button\n            type=\"button\"\n            className={this.changeClearButtonState()}\n            onClick={() => {\n              this.setState({\n                selectedGoods: [],\n              });\n            }}\n          >\n            x\n          </button>\n        </div>\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}