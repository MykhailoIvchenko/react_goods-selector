{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","checkIsInList","good","find","currentGood","makeGoodSelection","changeButtonType","toggleButtonName","showSelectedGoods","goods","length","handleSelectButtonClick","setState","prevState","filter","changeClearButtonState","className","map","type","onClick","this","slice","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,cAAe,I,EAGjBC,cAAgB,SAACC,GAAD,OACd,EAAKH,MAAMC,cAAcG,MAAK,SAAAC,GAAW,OAAIA,IAAgBF,M,EAG/DG,kBAAoB,SAACH,GAAD,OAClB,EAAKD,cAAcC,GAAQ,oBAAsB,Y,EAGnDI,iBAAmB,SAACJ,GAAD,OACjB,EAAKD,cAAcC,GAAQ,SAAW,O,EAGxCK,iBAAmB,SAACL,GAAD,OACjB,EAAKD,cAAcC,GAAQ,SAAW,O,EAGxCM,kBAAoB,SAACC,GACnB,OAAqB,IAAjBA,EAAMC,OACD,oBAGY,IAAjBD,EAAMC,OACD,eAGF,iB,EAGTC,wBAA0B,SAACT,GACrB,EAAKH,MAAMC,cACZG,MAAK,SAAAC,GAAW,OAAIA,IAAgBF,KACrC,EAAKU,UAAS,SAACC,GAAD,MAAgB,CAC5Bb,cACAa,EAAUb,cACPc,QAAO,SAAAV,GAAW,OAAIA,IAAgBF,SAG3C,EAAKU,UAAS,SAACC,GAAD,MAAgB,CAC5Bb,cAAc,GAAD,mBAAMa,EAAUb,eAAhB,CACXE,S,EAKRa,uBAAyB,kBAA2C,IAApC,EAAKhB,MAAMC,cAAcU,OACrD,SAAW,mB,4CAEf,WAAU,IAAD,OACP,OACE,sBAAKM,UAAU,MAAf,UACGnB,EAAgBoB,KAAI,SAAAf,GAAI,OACvB,mCACE,sBACEc,UAAU,gBADZ,UAIE,qBACEA,UAAW,EAAKX,kBAAkBH,GADpC,SAGGA,IAEH,wBACEgB,KAAK,SACLF,UAAW,EAAKV,iBAAiBJ,GACjCiB,QAAS,kBAAM,EAAKR,wBAAwBT,IAH9C,SAKG,EAAKK,iBAAiBL,OAZpBA,QAiBX,sBAAKc,UAAU,kBAAf,UACE,+BACGI,KAAKrB,MAAMC,cAAcqB,MAAM,GAAI,GAAGC,KAAK,MAC3CF,KAAKrB,MAAMC,cAAcU,OAAS,GAAK,QACvCU,KAAKrB,MAAMC,cAAcoB,KAAKrB,MAAMC,cAAcU,OAAS,GAC3DU,KAAKZ,kBAAkBY,KAAKrB,MAAMC,kBAErC,wBACEkB,KAAK,SACLF,UAAWI,KAAKL,yBAChBI,QAAS,WACP,EAAKP,SAAS,CACZZ,cAAe,MALrB,kBAYDH,EAAgBa,c,GA/FPa,IAAMC,WAqGT1B,ICpHf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c42fbc4.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, { selectedGoods: string[] }> {\n  state = {\n    selectedGoods: [],\n  };\n\n  checkIsInList = (good: string) => (\n    this.state.selectedGoods.find(currentGood => currentGood === good)\n  );\n\n  makeGoodSelection = (good: string) => (\n    this.checkIsInList(good) ? 'goodName selected' : 'goodName'\n  );\n\n  changeButtonType = (good: string) => (\n    this.checkIsInList(good) ? 'remove' : 'add'\n  );\n\n  toggleButtonName = (good: string) => (\n    this.checkIsInList(good) ? 'Remove' : 'Add'\n  );\n\n  showSelectedGoods = (goods: string[]) => {\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return ' is selected';\n    }\n\n    return ' are selected';\n  };\n\n  handleSelectButtonClick = (good: string) => {\n    if (this.state.selectedGoods\n      .find(currentGood => currentGood === good)) {\n      this.setState((prevState) => ({\n        selectedGoods:\n        prevState.selectedGoods\n          .filter(currentGood => currentGood !== good),\n      }));\n    } else {\n      this.setState((prevState) => ({\n        selectedGoods: [...prevState.selectedGoods,\n          good],\n      }));\n    }\n  };\n\n  changeClearButtonState = () => (this.state.selectedGoods.length === 0\n    ? 'hidden' : 'deleteSelection');\n\n  render() {\n    return (\n      <div className=\"App\">\n        {goodsFromServer.map(good => (\n          <>\n            <div\n              className=\"goodContainer\"\n              key={good}\n            >\n              <div\n                className={this.makeGoodSelection(good)}\n              >\n                {good}\n              </div>\n              <button\n                type=\"button\"\n                className={this.changeButtonType(good)}\n                onClick={() => this.handleSelectButtonClick(good)}\n              >\n                {this.toggleButtonName(good)}\n              </button>\n            </div>\n          </>\n        ))}\n        <div className=\"headerContainer\">\n          <h1>\n            {this.state.selectedGoods.slice(0, -1).join(', ')}\n            {this.state.selectedGoods.length > 1 && ' and '}\n            {this.state.selectedGoods[this.state.selectedGoods.length - 1]}\n            {this.showSelectedGoods(this.state.selectedGoods)}\n          </h1>\n          <button\n            type=\"button\"\n            className={this.changeClearButtonState()}\n            onClick={() => {\n              this.setState({\n                selectedGoods: [],\n              });\n            }}\n          >\n            x\n          </button>\n        </div>\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}